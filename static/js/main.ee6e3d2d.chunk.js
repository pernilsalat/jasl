(this.webpackJsonpexamples=this.webpackJsonpexamples||[]).push([[0],{281:function(n,t,e){"use strict";e.r(t);var c=e(2),r=e.n(c),o=e(42),s=e.n(o),i=(e(54),e(21)),u=e(10),a=e(7),j=e(12),m=e(284),b=e(283),d=e(3),l=function(){return Object(d.jsx)(m.a,{language:"javascript",style:b.a,children:"const useCountStore = createStore(\n  devtools(\n    persist(\n    (set, get) => ({\n      count: 0,\n      increment: () =>\n        set((store) => ({ ...store, count: store.count + 1 }), 'increment'),\n      decrement: () =>\n        set((store) => ({ ...store, count: store.count - 1 }), 'decrement'),\n    }),\n      {name:'normal-store'}\n  ), 'counter')\n);\n\nconst Increment = memo(() => {\n  const { increment } = useCountStore();\n  return <button onClick={increment}>increment</button>;\n});\n\nconst Decrement = memo(() => {\n  const { decrement } = useCountStore();\n  return <button onClick={decrement}>decrement</button>;\n});\n\nconst Count = memo(() => {\n  const count = useCountStore((state) => state.count * 2);\n  return <h1>{count}</h1>;\n});\n\nexport const NormalStore = () => (\n  <Fragment>\n    <Count/>\n    <Increment/>\n    <Decrement/>\n  </Fragment>\n)"})},O=Object(j.a)(Object(j.b)(Object(j.c)((function(n,t){return{count:0,increment:function(){return n((function(n){return Object(a.a)(Object(a.a)({},n),{},{count:n.count+1})}),"increment")},decrement:function(){return n((function(n){return Object(a.a)(Object(a.a)({},n),{},{count:n.count-1})}),"decrement")}}}),{name:"normal-store"}),"counter")),x=Object(c.memo)((function(){var n=O().increment;return Object(d.jsx)("button",{onClick:n,children:"increment"})})),g=Object(c.memo)((function(){var n=O().decrement;return Object(d.jsx)("button",{onClick:n,children:"decrement"})})),h=Object(c.memo)((function(){var n=O((function(n){return 2*n.count}));return Object(d.jsx)("h1",{children:n})})),f=function(){return Object(d.jsxs)(c.Fragment,{children:[Object(d.jsx)(h,{}),Object(d.jsx)(x,{}),Object(d.jsx)(g,{}),Object(d.jsx)(l,{})]})},p=function(){return Object(d.jsx)(m.a,{language:"javascript",style:b.a,children:"const reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { ...state, count: state.count + 1 };\n    case 'decrement':\n      return { ...state, count: state.count - 1 };\n    default:\n      return state;\n  }\n};\n\nconst useCountStoreRedux = createStore(\n  devtools(\n    persist(\n      redux(reducer, (set, get, api) => ({\n        count: 0,\n        increment: () => api.dispatch({ type: 'increment' }),\n        decrementAction: { type: 'decrement' },\n      })),\n      { name: 'count-redux' }\n    ),\n    'counterRedux'\n  )\n);\n\nconst Increment = memo(() => {\n  const { increment } = useCountStoreRedux();\n  return <button onClick={increment}>increment</button>;\n});\n\nconst Decrement = memo(() => {\n  const { decrementAction, dispatch } = useCountStoreRedux();\n  return <button onClick={() => dispatch(decrementAction)}>decrement</button>;\n});\n\nconst Count = memo(() => {\n  const count = useCountStoreRedux((state) => {\n    return state.count * 2;\n  });\n  return <h1>{count}</h1>;\n});\n\nexport const ReduxStore = () => (\n  <Fragment>\n    <Count/>\n    <Increment/>\n    <Decrement/>\n  </Fragment>\n)"})},v=Object(j.a)(Object(j.b)(Object(j.c)(Object(j.d)((function(n,t){switch(t.type){case"increment":return Object(a.a)(Object(a.a)({},n),{},{count:n.count+1});case"decrement":return Object(a.a)(Object(a.a)({},n),{},{count:n.count-1});default:return n}}),(function(n,t,e){return{count:0,increment:function(){return e.dispatch({type:"increment"})},decrementAction:{type:"decrement"}}})),{name:"count-redux"}),"counterRedux")),C=Object(c.memo)((function(){var n=v().increment;return Object(d.jsx)("button",{onClick:n,children:"increment"})})),S=Object(c.memo)((function(){var n=v(),t=n.decrementAction,e=n.dispatch;return Object(d.jsx)("button",{onClick:function(){return e(t)},children:"decrement"})})),F=Object(c.memo)((function(){var n=v((function(n){return 2*n.count}));return Object(d.jsx)("h1",{children:n})})),y=function(){return Object(d.jsxs)(c.Fragment,{children:[Object(d.jsx)(F,{}),Object(d.jsx)(C,{}),Object(d.jsx)(S,{}),Object(d.jsx)(p,{})]})},k=e(285),T=function(){return Object(d.jsx)(m.a,{language:"javascript",style:b.a,children:"const useToggleMachineStore = createStore(\n  devtools(\n    persist(\n      xstate(\n        (set, get, api) =>\n          Machine(\n            {\n              id: 'toggle',\n              initial: 'active',\n              states: {\n                active: {\n                  on: {\n                    TOGGLE: { target: 'inactive', actions: 'incrementCount' },\n                  },\n                },\n                inactive: {\n                  on: {\n                    TOGGLE: { target: 'active', actions: 'incrementCount' },\n                  },\n                },\n              },\n            },\n            {\n              actions: {\n                incrementCount() {\n                  set(\n                    (context) => ({ ...context, times: context.times + 1 }),\n                    'incrementCount'\n                  );\n                },\n              },\n            }\n          ),\n        { times: 0 }\n      ),\n      { name: 'xstate-counter' }\n    ),\n    'toggle'\n  )\n);\n\nconst Light = memo(() => {\n  const { state, context } = useToggleMachineStore();\n\n  return (\n    <Fragment>\n      <h1>\n        the light is:\n        <br />\n        {state === 'active' ? 'open' : 'close'}\n      </h1>\n      <div>toggle count: {context.times}</div>\n    </Fragment>\n  );\n});\n\nconst Toggle = memo(() => {\n  const { sendEvent } = useToggleMachineStore();\n  return <button onClick={() => sendEvent.toggle()}>toggle</button>;\n});\n\nexport const XstateStore = () => (\n  <Fragment>\n    <Light />\n    <Toggle />\n  </Fragment>\n)"})},E=Object(j.a)(Object(j.b)(Object(j.c)(Object(j.e)((function(n,t,e){return Object(k.a)({id:"toggle",initial:"active",states:{active:{on:{TOGGLE:{target:"inactive",actions:"incrementCount"}}},inactive:{on:{TOGGLE:{target:"active",actions:"incrementCount"}}}}},{actions:{incrementCount:function(){n((function(n){return Object(a.a)(Object(a.a)({},n),{},{times:n.times+1})}),"incrementCount")}}})}),{times:0}),{name:"xstate-counter"}),"toggle")),G=Object(c.memo)((function(){var n=E(),t=n.state,e=n.context;return Object(d.jsxs)(c.Fragment,{children:[Object(d.jsxs)("h1",{children:["the light is:",Object(d.jsx)("br",{}),"active"===t?"open":"close"]}),Object(d.jsxs)("div",{children:["toggle count: ",e.times]})]})})),L=Object(c.memo)((function(){var n=E().sendEvent;return Object(d.jsx)("button",{onClick:function(){return n.toggle()},children:"toggle"})})),R=function(){return Object(d.jsxs)(c.Fragment,{children:[Object(d.jsx)(G,{}),Object(d.jsx)(L,{}),Object(d.jsx)(T,{})]})};var A=function(){return Object(d.jsxs)("div",{className:"App",children:[Object(d.jsx)("nav",{children:Object(d.jsxs)("ul",{style:{display:"flex",justifyContent:"space-around"},children:[Object(d.jsx)("li",{children:Object(d.jsx)(i.b,{to:"/normal-store",children:"normal store"})}),Object(d.jsx)("li",{children:Object(d.jsx)(i.b,{to:"/redux-store",children:"Redux store"})}),Object(d.jsx)("li",{children:Object(d.jsx)(i.b,{to:"/xstate-store",children:"xstate store"})})]})}),Object(d.jsxs)(u.c,{children:[Object(d.jsx)(u.a,{path:"/normal-store",children:Object(d.jsx)(f,{})}),Object(d.jsx)(u.a,{path:"/redux-store",children:Object(d.jsx)(y,{})}),Object(d.jsx)(u.a,{path:"/xstate-store",children:Object(d.jsx)(R,{})})]})]})},I=function(n){n&&n instanceof Function&&e.e(3).then(e.bind(null,286)).then((function(t){var e=t.getCLS,c=t.getFID,r=t.getFCP,o=t.getLCP,s=t.getTTFB;e(n),c(n),r(n),o(n),s(n)}))};s.a.render(Object(d.jsx)(r.a.StrictMode,{children:Object(d.jsx)(i.a,{basename:"/jasl",children:Object(d.jsx)(A,{})})}),document.getElementById("root")),I()},54:function(n,t,e){}},[[281,1,2]]]);
//# sourceMappingURL=main.ee6e3d2d.chunk.js.map