{"version":3,"sources":["../../src/middlewares/redux.js","../../src/utils/pipe.js","../../src/utils/functions.js","../../src/createStore.js","../../src/middlewares/devtools.js","../../src/middlewares/persist.js","views/NormalStore/Code.js","views/NormalStore/NormalStore.js","views/ReduxStore/Code.js","views/ReduxStore/ReduxStore.js","../../src/utils/string.js","views/XstateStore/Code.js","views/XstateStore/XstateStore.js","../../src/middlewares/xstate.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","init","pipe","fns","value","reduce","acc","act","pipeActions","actions","add","action","this","push","execute","noop","identity","a","createStore","emitter","subscriptions","Map","emit","forEach","fn","subscribe","key","Symbol","set","delete","createEmitter","store","getState","setState","operation","api","listener","onMount","onUnmount","selector","useState","localStore","setLocalStore","useLayoutEffect","unsubscribe","devtools","prefix","get","extension","window","__REDUX_DEVTOOLS_EXTENSION__","top","initialState","name","dispatch","startsWith","send","savedSetState","connect","message","type","state","ignoreState","payload","JSON","parse","persist","options","storage","getStorage","localStorage","serialize","stringify","deserialize","blacklist","whitelist","onRehydrateStorage","version","migrate","e","console","warn","setItem","Object","keys","includes","replace","loading","then","callback","promise","postRehydrationCallback","undefined","getItem","storageValue","deserializedStorageValue","migratedState","merge","Code","language","style","docco","useCountStore","count","increment","decrement","Increment","memo","onClick","Decrement","Count","NormalStore","useCountStoreRedux","decrementAction","ReduxStore","camelize","str","toLowerCase","m","chr","toUpperCase","useToggleMachineStore","initMachine","initialContext","interpretOptions","onTransition","machine","context","service","interpret","serviceState","changed","start","stop","initialStateValue","sendEvent","events","params","xstate","Machine","id","initial","states","active","on","TOGGLE","target","inactive","incrementCount","times","Light","Toggle","toggle","XstateStore","App","className","display","justifyContent","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.20c0155c.chunk.js","sourcesContent":["export const redux = (reducer, init) => (set, get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action));\n    if (api.devtools) {\n      api.devtools.send(api.devtools.prefix + action.type, get());\n    }\n    return action;\n  };\n  const initialState = init(set, get, api);\n  return { dispatch: api.dispatch, ...initialState };\n};\n","export const pipe = (...fns) => (value) =>\n  fns.reduce((acc, act) => act(acc), value);\n\nexport const pipeActions = () => ({\n  actions: [],\n  add(action) {\n    this.actions.push(action);\n  },\n  execute() {\n    pipe(...this.actions)();\n  },\n});\n","export const noop = () => {};\nexport const identity = (a) => a;\n\n","import { useLayoutEffect, useState } from \"react\";\nimport { pipeActions } from \"./utils/pipe\";\nimport { identity } from \"./utils/functions\";\n\nconst createEmitter = () => {\n  const subscriptions = new Map();\n\n  return {\n    emit: (value) => subscriptions.forEach((fn) => fn(value)),\n    subscribe: (fn) => {\n      // eslint-disable-next-line no-new-symbol\n      const key = Symbol();\n      subscriptions.set(key, fn);\n      return () => subscriptions.delete(key);\n    },\n  };\n};\n\n// const debounce = (fn, timeout) => {\n//   let timer,\n//     parameters = {};\n//   return (...args) => {\n//     parameters = { ...parameters, ...args };\n//     clearTimeout(timer);\n//     timer = setTimeout(() => {\n//       fn.apply(this, args);\n//     }, timeout);\n//   };\n// };\nexport const createStore = (init) => {\n  const emitter = createEmitter();\n\n  let store = null;\n  const getState = () => store;\n  const setState = (operation) => {\n    store = operation(store);\n    emitter.emit(store);\n  };\n\n  const subscribe = (listener) => emitter.subscribe(listener);\n  const api = {\n    getState,\n    setState,\n    subscribe,\n    onMount: pipeActions(),\n    onUnmount: pipeActions(),\n  };\n  store = init(setState, getState, api);\n\n  const useStore = (selector = identity) => {\n    const [localStore, setLocalStore] = useState(getState());\n\n    useLayoutEffect(() => {\n      api.onMount.execute();\n      const unsubscribe = emitter.subscribe(setLocalStore);\n      return () => {\n        unsubscribe();\n        api.onUnmount.execute();\n      };\n    }, []);\n\n    return selector(localStore);\n  };\n\n  return useStore;\n};\n","export const devtools = (init, prefix) => (set, get, api) => {\n  let extension;\n  try {\n    extension =\n      window.__REDUX_DEVTOOLS_EXTENSION__ ||\n      window.top.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch {}\n\n  if (!extension) {\n    if (\n      process.env.NODE_ENV === 'development' &&\n      typeof window !== 'undefined'\n    ) {\n      console.warn('Please install/enable Redux devtools extension');\n    }\n    api.devtools = null;\n    return init(set, get);\n  }\n\n  const namedSet = (operation, name = '') => {\n    set(operation);\n    if (!api.dispatch || name.startsWith('@@')) {\n      api.devtools.send(api.devtools.prefix + (name || 'action'), get());\n    }\n  };\n\n  const initialState = init(namedSet, get, api);\n  if (!api.devtools) {\n    const savedSetState = api.setState;\n    api.setState = (operation) => {\n      savedSetState(operation);\n      api.devtools.send(api.devtools.prefix + 'setState', api.getState());\n    };\n    api.devtools = extension.connect({ name: prefix });\n    api.devtools.prefix = prefix ? `${prefix} > ` : '';\n    api.devtools.subscribe((message) => {\n      if (message.type === 'DISPATCH' && message.state) {\n        const ignoreState =\n          message.payload.type === 'JUMP_TO_ACTION' ||\n          message.payload.type === 'JUMP_TO_STATE';\n        if (!api.dispatch && !ignoreState) {\n          api.setState(JSON.parse(message.state));\n        } else {\n          savedSetState(JSON.parse(message.state));\n        }\n      } else if (\n        message.type === 'DISPATCH' &&\n        message.payload?.type === 'COMMIT'\n      ) {\n        api.devtools.init(api.getState());\n      }\n    });\n    api.devtools.init(initialState);\n  }\n  return initialState;\n};\n","import merge from \"lodash.merge\";\n\nexport const persist = (init, options) => (set, get, api) => {\n  const {\n    name,\n    getStorage = () => localStorage,\n    serialize = JSON.stringify,\n    deserialize = JSON.parse,\n    blacklist,\n    whitelist,\n    onRehydrateStorage,\n    version = 0,\n    migrate,\n  } = options || {};\n\n  let storage;\n\n  try {\n    storage = getStorage();\n  } catch (e) {\n    // prevent error if the storage is not defined (e.g. when server side rendering a page)\n  }\n\n  if (!storage) {\n    return init(\n      (...args) => {\n        console.warn(\n          `Persist middleware: unable to update ${name}, the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n\n  const setItem = async () => {\n    const state = { ...get() };\n\n    if (whitelist) {\n      Object.keys(state).forEach((key) => {\n        !whitelist.includes(key) && delete state[key];\n      });\n    }\n    if (blacklist) {\n      blacklist.forEach((key) => delete state[key]);\n    }\n\n    return storage?.setItem(name, await serialize({ state, version }));\n  };\n\n  const savedSetState = api.setState;\n\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  api.loading = {\n    value: true,\n    then: (callback) => promise.then(callback),\n  };\n\n  // rehydrate initial state with existing stored state\n  const promise = (async () => {\n    const postRehydrationCallback = onRehydrateStorage?.(get()) || undefined;\n\n    try {\n      const storageValue = await storage.getItem(name);\n      if (storageValue) {\n        const deserializedStorageValue = await deserialize(storageValue);\n\n        // if versions mismatch, run migration\n        if (deserializedStorageValue.version !== version) {\n          const migratedState = await migrate?.(\n            deserializedStorageValue.state,\n            deserializedStorageValue.version\n          );\n          if (migratedState) {\n            set((state) => merge({}, state, migratedState), \"@@MIGRATED\");\n            await setItem();\n            api.loading.value = false;\n          }\n        } else {\n          set(\n            (state) => merge({}, state, deserializedStorageValue.state),\n            \"@@HYDRATE\"\n          );\n          api.loading.value = false;\n        }\n      }\n    } catch (e) {\n      postRehydrationCallback?.(undefined, e);\n      return;\n    }\n\n    postRehydrationCallback?.(get(), undefined);\n  })();\n\n  return init(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n};\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst codeString =\n  'const useCountStore = createStore(\\n' +\n  '  devtools(\\n' +\n  '    persist(\\n' +\n  '    (set, get) => ({\\n' +\n  '      count: 0,\\n' +\n  '      increment: () =>\\n' +\n  '        set((store) => ({ ...store, count: store.count + 1 }), \\'increment\\'),\\n' +\n  '      decrement: () =>\\n' +\n  '        set((store) => ({ ...store, count: store.count - 1 }), \\'decrement\\'),\\n' +\n  '    }),\\n' +\n  '      {name:\\'normal-store\\'}\\n' +\n  '  ), \\'counter\\')\\n' +\n  ');\\n' +\n  '\\n' +\n  'const Increment = memo(() => {\\n' +\n  '  const { increment } = useCountStore();\\n' +\n  '  return <button onClick={increment}>increment</button>;\\n' +\n  '});\\n' +\n  '\\n' +\n  'const Decrement = memo(() => {\\n' +\n  '  const { decrement } = useCountStore();\\n' +\n  '  return <button onClick={decrement}>decrement</button>;\\n' +\n  '});\\n' +\n  '\\n' +\n  'const Count = memo(() => {\\n' +\n  '  const count = useCountStore((state) => state.count * 2);\\n' +\n  '  return <h1>{count}</h1>;\\n' +\n  '});\\n' +\n  '\\n' +\n  'export const NormalStore = () => (\\n' +\n  '  <Fragment>\\n' +\n  '    <Count/>\\n' +\n  '    <Increment/>\\n' +\n  '    <Decrement/>\\n' +\n  '  </Fragment>\\n' +\n  ')'\n\nexport const Code = () => (\n  <SyntaxHighlighter language=\"javascript\" style={docco}>\n    {codeString}\n  </SyntaxHighlighter>\n)","import { Fragment, memo } from \"react\";\nimport { createStore } from \"../../../../src/createStore\";\nimport { devtools } from \"../../../../src/middlewares/devtools\";\nimport { persist } from \"../../../../src/middlewares/persist\";\nimport { Code } from \"./Code\";\n\nconst useCountStore = createStore(\n  devtools(\n    persist(\n      (set, get) => ({\n        count: 0,\n        increment: () =>\n          set((store) => ({ ...store, count: store.count + 1 }), \"increment\"),\n        decrement: () =>\n          set((store) => ({ ...store, count: store.count - 1 }), \"decrement\"),\n      }),\n      { name: \"normal-store\" }\n    ),\n    \"counter\"\n  )\n);\n\nconst Increment = memo(() => {\n  const { increment } = useCountStore();\n  return <button onClick={increment}>increment</button>;\n});\n\nconst Decrement = memo(() => {\n  const { decrement } = useCountStore();\n  return <button onClick={decrement}>decrement</button>;\n});\n\nconst Count = memo(() => {\n  const count = useCountStore((state) => state.count * 2);\n  return <h1>{count}</h1>;\n});\n\nexport const NormalStore = () => (\n  <Fragment>\n    <Count />\n    <Increment />\n    <Decrement />\n    <Code />\n  </Fragment>\n);\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst codeString =\n  'const reducer = (state, action) => {\\n' +\n  '  switch (action.type) {\\n' +\n  '    case \\'increment\\':\\n' +\n  '      return { ...state, count: state.count + 1 };\\n' +\n  '    case \\'decrement\\':\\n' +\n  '      return { ...state, count: state.count - 1 };\\n' +\n  '    default:\\n' +\n  '      return state;\\n' +\n  '  }\\n' +\n  '};\\n' +\n  '\\n' +\n  'const useCountStoreRedux = createStore(\\n' +\n  '  devtools(\\n' +\n  '    persist(\\n' +\n  '      redux(reducer, (set, get, api) => ({\\n' +\n  '        count: 0,\\n' +\n  '        increment: () => api.dispatch({ type: \\'increment\\' }),\\n' +\n  '        decrementAction: { type: \\'decrement\\' },\\n' +\n  '      })),\\n' +\n  '      { name: \\'count-redux\\' }\\n' +\n  '    ),\\n' +\n  '    \\'counterRedux\\'\\n' +\n  '  )\\n' +\n  ');\\n' +\n  '\\n' +\n  'const Increment = memo(() => {\\n' +\n  '  const { increment } = useCountStoreRedux();\\n' +\n  '  return <button onClick={increment}>increment</button>;\\n' +\n  '});\\n' +\n  '\\n' +\n  'const Decrement = memo(() => {\\n' +\n  '  const { decrementAction, dispatch } = useCountStoreRedux();\\n' +\n  '  return <button onClick={() => dispatch(decrementAction)}>decrement</button>;\\n' +\n  '});\\n' +\n  '\\n' +\n  'const Count = memo(() => {\\n' +\n  '  const count = useCountStoreRedux((state) => {\\n' +\n  '    return state.count * 2;\\n' +\n  '  });\\n' +\n  '  return <h1>{count}</h1>;\\n' +\n  '});\\n' +\n  '\\n' +\n  'export const ReduxStore = () => (\\n' +\n  '  <Fragment>\\n' +\n  '    <Count/>\\n' +\n  '    <Increment/>\\n' +\n  '    <Decrement/>\\n' +\n  '  </Fragment>\\n' +\n  ')'\n\nexport const Code = () => (\n  <SyntaxHighlighter language=\"javascript\" style={docco}>\n    {codeString}\n  </SyntaxHighlighter>\n)","import {Fragment, memo} from \"react\";\nimport {createStore} from \"../../../../src/createStore\";\nimport {devtools} from \"../../../../src/middlewares/devtools\";\nimport {redux} from \"../../../../src/middlewares/redux\";\nimport {persist} from \"../../../../src/middlewares/persist\";\nimport {Code} from \"./Code\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { ...state, count: state.count + 1 };\n    case 'decrement':\n      return { ...state, count: state.count - 1 };\n    default:\n      return state;\n  }\n};\n\nconst useCountStoreRedux = createStore(\n  devtools(\n    persist(\n      redux(reducer, (set, get, api) => ({\n        count: 0,\n        increment: () => api.dispatch({ type: 'increment' }),\n        decrementAction: { type: 'decrement' },\n      })),\n      { name: 'count-redux' }\n    ),\n    'counterRedux'\n  )\n);\n\nconst Increment = memo(() => {\n  const { increment } = useCountStoreRedux();\n  return <button onClick={increment}>increment</button>;\n});\n\nconst Decrement = memo(() => {\n  const { decrementAction, dispatch } = useCountStoreRedux();\n  return <button onClick={() => dispatch(decrementAction)}>decrement</button>;\n});\n\nconst Count = memo(() => {\n  const count = useCountStoreRedux((state) => {\n    return state.count * 2;\n  });\n  return <h1>{count}</h1>;\n});\n\nexport const ReduxStore = () => (\n  <Fragment>\n    <Count/>\n    <Increment/>\n    <Decrement/>\n    <Code/>\n  </Fragment>\n)","export const camelize = function camalize(str) {\n  return str\n    .toLowerCase()\n    .replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => chr.toUpperCase());\n};\n","import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst codeString =\n  'const useToggleMachineStore = createStore(\\n' +\n  '  devtools(\\n' +\n  '    persist(\\n' +\n  '      xstate(\\n' +\n  '        (set, get, api) =>\\n' +\n  '          Machine(\\n' +\n  '            {\\n' +\n  '              id: \\'toggle\\',\\n' +\n  '              initial: \\'active\\',\\n' +\n  '              states: {\\n' +\n  '                active: {\\n' +\n  '                  on: {\\n' +\n  '                    TOGGLE: { target: \\'inactive\\', actions: \\'incrementCount\\' },\\n' +\n  '                  },\\n' +\n  '                },\\n' +\n  '                inactive: {\\n' +\n  '                  on: {\\n' +\n  '                    TOGGLE: { target: \\'active\\', actions: \\'incrementCount\\' },\\n' +\n  '                  },\\n' +\n  '                },\\n' +\n  '              },\\n' +\n  '            },\\n' +\n  '            {\\n' +\n  '              actions: {\\n' +\n  '                incrementCount() {\\n' +\n  '                  set(\\n' +\n  '                    (context) => ({ ...context, times: context.times + 1 }),\\n' +\n  '                    \\'incrementCount\\'\\n' +\n  '                  );\\n' +\n  '                },\\n' +\n  '              },\\n' +\n  '            }\\n' +\n  '          ),\\n' +\n  '        { times: 0 }\\n' +\n  '      ),\\n' +\n  '      { name: \\'xstate-counter\\' }\\n' +\n  '    ),\\n' +\n  '    \\'toggle\\'\\n' +\n  '  )\\n' +\n  ');\\n' +\n  '\\n' +\n  'const Light = memo(() => {\\n' +\n  '  const { state, context } = useToggleMachineStore();\\n' +\n  '\\n' +\n  '  return (\\n' +\n  '    <Fragment>\\n' +\n  '      <h1>\\n' +\n  '        the light is:\\n' +\n  '        <br />\\n' +\n  '        {state === \\'active\\' ? \\'open\\' : \\'close\\'}\\n' +\n  '      </h1>\\n' +\n  '      <div>toggle count: {context.times}</div>\\n' +\n  '    </Fragment>\\n' +\n  '  );\\n' +\n  '});\\n' +\n  '\\n' +\n  'const Toggle = memo(() => {\\n' +\n  '  const { sendEvent } = useToggleMachineStore();\\n' +\n  '  return <button onClick={() => sendEvent.toggle()}>toggle</button>;\\n' +\n  '});\\n' +\n  '\\n' +\n  'export const XstateStore = () => (\\n' +\n  '  <Fragment>\\n' +\n  '    <Light />\\n' +\n  '    <Toggle />\\n' +\n  '  </Fragment>\\n' +\n  ')'\n\nexport const Code = () => (\n  <SyntaxHighlighter language=\"javascript\" style={docco}>\n    {codeString}\n  </SyntaxHighlighter>\n)","import {Fragment, memo} from \"react\";\nimport {createStore} from \"../../../../src/createStore\";\nimport {devtools} from \"../../../../src/middlewares/devtools\";\nimport {xstate} from \"../../../../src/middlewares/xstate\";\nimport {persist} from \"../../../../src/middlewares/persist\";\nimport {Machine} from \"xstate\";\nimport {Code} from \"./Code\";\n\nconst useToggleMachineStore = createStore(\n  devtools(\n    persist(\n      xstate(\n        (set, get, api) =>\n          Machine(\n            {\n              id: 'toggle',\n              initial: 'active',\n              states: {\n                active: {\n                  on: {\n                    TOGGLE: { target: 'inactive', actions: 'incrementCount' },\n                  },\n                },\n                inactive: {\n                  on: {\n                    TOGGLE: { target: 'active', actions: 'incrementCount' },\n                  },\n                },\n              },\n            },\n            {\n              actions: {\n                incrementCount() {\n                  set(\n                    (context) => ({ ...context, times: context.times + 1 }),\n                    'incrementCount'\n                  );\n                },\n              },\n            }\n          ),\n        { times: 0 }\n      ),\n      { name: 'xstate-counter' }\n    ),\n    'toggle'\n  )\n);\n\nconst Light = memo(() => {\n  const { state, context } = useToggleMachineStore();\n\n  return (\n    <Fragment>\n      <h1>\n        the light is:\n        <br />\n        {state === 'active' ? 'open' : 'close'}\n      </h1>\n      <div>toggle count: {context.times}</div>\n    </Fragment>\n  );\n});\n\nconst Toggle = memo(() => {\n  const { sendEvent } = useToggleMachineStore();\n  return <button onClick={() => sendEvent.toggle()}>toggle</button>;\n});\n\nexport const XstateStore = () => (\n  <Fragment>\n    <Light />\n    <Toggle />\n    <Code/>\n  </Fragment>\n)","import { noop } from \"../utils/functions\";\nimport { interpret, State } from \"xstate\";\nimport { camelize } from \"../utils/string\";\n\nexport const xstate = (\n  initMachine,\n  initialContext,\n  interpretOptions,\n  onTransition = noop\n) => (set, get, api) => {\n  const contextSet = (operation, ...options) => {\n    set(\n      (state) => ({ ...state, context: operation(state.context) }),\n      ...options\n    );\n  };\n  const machine = initMachine(contextSet, get, api);\n  const service = interpret(machine, interpretOptions).onTransition(\n    (serviceState) => {\n      // if (serviceState.changed) debugger;\n      if (serviceState.changed && serviceState.value !== get().state)\n        set(\n          (state) => ({ ...state, state: serviceState.value }),\n          \"stateUpdate\"\n        );\n      onTransition(serviceState);\n    }\n  );\n  api.onMount.add(() => {\n    function start() {\n      const { state } = get();\n      service.start(state);\n    }\n    const { value, then } = api.loading;\n    value ? then(start) : start();\n  });\n  api.onUnmount.add(() => service.stop());\n  api.service = service;\n\n  const { initialStateValue, events } = machine;\n  const sendEvent = events.reduce(\n    (acc, act) => ({\n      ...acc,\n      [camelize(act)]: (params) => service.send({ type: act, ...params }),\n    }),\n    {}\n  );\n\n  return {\n    state: initialStateValue,\n    context: initialContext,\n    sendEvent,\n  };\n};\n","import {Link, Switch, Route} from 'react-router-dom'\nimport {NormalStore} from \"./views/NormalStore/NormalStore\";\nimport {ReduxStore} from \"./views/ReduxStore/ReduxStore\";\nimport {XstateStore} from \"./views/XstateStore/XstateStore\";\n// import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <li>\n            <Link to=\"/normal-store\">normal store</Link>\n          </li>\n          <li>\n            <Link to=\"/redux-store\">Redux store</Link>\n          </li>\n          <li>\n            <Link to=\"/xstate-store\">xstate store</Link>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path=\"/normal-store\">\n          <NormalStore/>\n        </Route>\n        <Route path=\"/redux-store\">\n          <ReduxStore/>\n        </Route>\n        <Route path=\"/xstate-store\">\n          <XstateStore/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}